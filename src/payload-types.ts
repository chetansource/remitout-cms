/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    homepageSections: HomepageSection;
    'why-remitout': WhyRemitout;
    'why-remitout-cta': WhyRemitoutCta;
    studentTrustSection: StudentTrustSection;
    services: Service;
    testimonial: Testimonial;
    faqs: Faq;
    'footer-content': FooterContent;
    contactDetails: ContactDetail;
    users: User;
    enquiries: Enquiry;
    media: Media;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    homepageSections: HomepageSectionsSelect<false> | HomepageSectionsSelect<true>;
    'why-remitout': WhyRemitoutSelect<false> | WhyRemitoutSelect<true>;
    'why-remitout-cta': WhyRemitoutCtaSelect<false> | WhyRemitoutCtaSelect<true>;
    studentTrustSection: StudentTrustSectionSelect<false> | StudentTrustSectionSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    testimonial: TestimonialSelect<false> | TestimonialSelect<true>;
    faqs: FaqsSelect<false> | FaqsSelect<true>;
    'footer-content': FooterContentSelect<false> | FooterContentSelect<true>;
    contactDetails: ContactDetailsSelect<false> | ContactDetailsSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    enquiries: EnquiriesSelect<false> | EnquiriesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    seo: Seo;
  };
  globalsSelect: {
    seo: SeoSelect<false> | SeoSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepageSections".
 */
export interface HomepageSection {
  id: string;
  title: string;
  hero?: {
    highlight?: string | null;
    description?: string | null;
    ctaText?: string | null;
    ctaLink?: string | null;
    image?: (string | null) | Media;
    testimonial?: {
      text?: string | null;
      author?: string | null;
      rating?: number | null;
      avatar?: (string | null) | Media;
    };
  };
  services?:
    | {
        title?: string | null;
        description?: string | null;
        iconType?: ('book' | 'flight' | 'pigMoney' | 'visaAssistance') | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-remitout".
 */
export interface WhyRemitout {
  id: string;
  title: string;
  description: string;
  iconType: 'Award' | 'PersonStar';
  image: string | Media;
  /**
   * Controls the display order of items
   */
  order?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-remitout-cta".
 */
export interface WhyRemitoutCta {
  id: string;
  title: string;
  description: string;
  buttonText: string;
  buttonLink?: string | null;
  image?: (string | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "studentTrustSection".
 */
export interface StudentTrustSection {
  id: string;
  studentCount: number;
  /**
   * Use {count} as a placeholder for student count
   */
  headline: string;
  description: string;
  features: {
    text?: string | null;
    id?: string | null;
  }[];
  satisfactionPercent: number;
  satisfactionText: string;
  advisorText: string;
  imageTopRight: string | Media;
  imageBottomLeft: string | Media;
  buttonText?: string | null;
  buttonLink?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: string;
  title: string;
  subtitle?: string | null;
  description?:
    | {
        text?: string | null;
        id?: string | null;
      }[]
    | null;
  image: string | Media;
  buttonText?: string | null;
  buttonLink?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonial".
 */
export interface Testimonial {
  id: string;
  testimonials?:
    | {
        text: string;
        name: string;
        rating: number;
        avatar?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs".
 */
export interface Faq {
  id: string;
  question: string;
  answer: string;
  category: 'admission-support' | 'loan-assistance' | 'visa-assistance' | 'money-transfer';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer-content".
 */
export interface FooterContent {
  id: string;
  officeAddress: string;
  email: string;
  phone: string;
  videoImage?: (string | null) | Media;
  videoLink?: string | null;
  socialLinks: {
    facebook: string;
    instagram: string;
    additionalLinks?:
      | {
          /**
           * Name of the social media, e.g., LinkedIn
           */
          label: string;
          icon: string | Media;
          /**
           * Link to your social profile
           */
          link: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactDetails".
 */
export interface ContactDetail {
  id: string;
  phone: string;
  email: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  role: 'admin' | 'user';
  name: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "enquiries".
 */
export interface Enquiry {
  id: string;
  fullName: string;
  email: string;
  phoneCountryCode: string;
  phoneNumber: string;
  serviceInterestedIn: 'consultation' | 'money-transfer' | 'business-services' | 'other';
  message: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'homepageSections';
        value: string | HomepageSection;
      } | null)
    | ({
        relationTo: 'why-remitout';
        value: string | WhyRemitout;
      } | null)
    | ({
        relationTo: 'why-remitout-cta';
        value: string | WhyRemitoutCta;
      } | null)
    | ({
        relationTo: 'studentTrustSection';
        value: string | StudentTrustSection;
      } | null)
    | ({
        relationTo: 'services';
        value: string | Service;
      } | null)
    | ({
        relationTo: 'testimonial';
        value: string | Testimonial;
      } | null)
    | ({
        relationTo: 'faqs';
        value: string | Faq;
      } | null)
    | ({
        relationTo: 'footer-content';
        value: string | FooterContent;
      } | null)
    | ({
        relationTo: 'contactDetails';
        value: string | ContactDetail;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'enquiries';
        value: string | Enquiry;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "homepageSections_select".
 */
export interface HomepageSectionsSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        highlight?: T;
        description?: T;
        ctaText?: T;
        ctaLink?: T;
        image?: T;
        testimonial?:
          | T
          | {
              text?: T;
              author?: T;
              rating?: T;
              avatar?: T;
            };
      };
  services?:
    | T
    | {
        title?: T;
        description?: T;
        iconType?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-remitout_select".
 */
export interface WhyRemitoutSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  iconType?: T;
  image?: T;
  order?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "why-remitout-cta_select".
 */
export interface WhyRemitoutCtaSelect<T extends boolean = true> {
  title?: T;
  description?: T;
  buttonText?: T;
  buttonLink?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "studentTrustSection_select".
 */
export interface StudentTrustSectionSelect<T extends boolean = true> {
  studentCount?: T;
  headline?: T;
  description?: T;
  features?:
    | T
    | {
        text?: T;
        id?: T;
      };
  satisfactionPercent?: T;
  satisfactionText?: T;
  advisorText?: T;
  imageTopRight?: T;
  imageBottomLeft?: T;
  buttonText?: T;
  buttonLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  subtitle?: T;
  description?:
    | T
    | {
        text?: T;
        id?: T;
      };
  image?: T;
  buttonText?: T;
  buttonLink?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "testimonial_select".
 */
export interface TestimonialSelect<T extends boolean = true> {
  testimonials?:
    | T
    | {
        text?: T;
        name?: T;
        rating?: T;
        avatar?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "faqs_select".
 */
export interface FaqsSelect<T extends boolean = true> {
  question?: T;
  answer?: T;
  category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer-content_select".
 */
export interface FooterContentSelect<T extends boolean = true> {
  officeAddress?: T;
  email?: T;
  phone?: T;
  videoImage?: T;
  videoLink?: T;
  socialLinks?:
    | T
    | {
        facebook?: T;
        instagram?: T;
        additionalLinks?:
          | T
          | {
              label?: T;
              icon?: T;
              link?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contactDetails_select".
 */
export interface ContactDetailsSelect<T extends boolean = true> {
  phone?: T;
  email?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "enquiries_select".
 */
export interface EnquiriesSelect<T extends boolean = true> {
  fullName?: T;
  email?: T;
  phoneCountryCode?: T;
  phoneNumber?: T;
  serviceInterestedIn?: T;
  message?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo".
 */
export interface Seo {
  id: string;
  metaTitle: string;
  metaDescription: string;
  canonicalUrl?: string | null;
  ogTitle?: string | null;
  ogDescription?: string | null;
  ogImage?: (string | null) | Media;
  ogImageUrl?: string | null;
  ogUrl?: string | null;
  twitterCard?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "seo_select".
 */
export interface SeoSelect<T extends boolean = true> {
  metaTitle?: T;
  metaDescription?: T;
  canonicalUrl?: T;
  ogTitle?: T;
  ogDescription?: T;
  ogImage?: T;
  ogImageUrl?: T;
  ogUrl?: T;
  twitterCard?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}